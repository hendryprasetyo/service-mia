openapi: 3.0.0
info:
  title: Service Authentication
  version: 1.0.0
  description: API for authenticating users with login credentials
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /api/auth/login:
    post:
      tags:
        - developers
      summary: API Public
      description: |
        This endpoint allows a user to authenticate by providing their login identifier (username or email) and password.
        If the credentials are valid, an authentication token will be returned for subsequent requests.
      operationId: authenticateUser
      requestBody:
        description: 'The credentials required to authenticate a user, with encryption value'
        content:
          application/json:
            schema:
              type: object
              required:
                - loginIdentifier
                - password
              properties:
                loginIdentifier:
                  type: string
                  description: "The user's login identifier, such as username or email"
                  example: 2107f62a60e84dc55657cc112857d4e163c49886e3c4ea7c1b02076ac37b3893
                password:
                  type: string
                  description: The user's password
                  example: 0d6c46070c52b6d181710a7d2f1bcb9a
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data:
                      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                    transactionid: 'AWB3217331854074390'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: |
                  Set-Cookie: __access_token_wildbook_web__=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly; Secure
                  Set-Cookie: __refresh_token_wildbook_web__=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly; Secure
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00400':
                  summary: 'statusCode 00400'
                  value:
                    statusCode: '00400'
                    message: \"identifierLogin\" is required
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00404':
                  summary: statusCode 00404
                  value:
                    statusCode: '00404'
                    message: 'User Not Found'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                40000-MMP:
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: Missing Mandatory Parameter
                    data: {}
                    transactionid: 'AWB3217331854074390'
                40000-IMP:
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: Invalid Mandatory Parameter
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '01422':
                  summary: 'statusCode 01422'
                  value:
                    statusCode: '01422'
                    message: Failed Decryption
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: To Many Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                02429-BD:
                  summary: 'statusCode 02429 : Bot Detection'
                  value:
                    statusCode: '02429'
                    message: You are detected as a bot
                    data: {}
                    transactionid: 'AWB3217331854074390'
                02429-IV:
                  summary: 'statusCode 02429 : Invalid Password'
                  value:
                    statusCode: '02429'
                    message: To Many Request Invalid Password
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: Bad Implementation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: statusCode 00500
                  value:
                    statusCode: '00500'
                    message: Internal Server Error
                    data: {}
                    transactionid: 'AWB3217331854074390'
  /api/auth/register:
    post:
      tags:
        - developers
      summary: API Public
      description: "This endpoint allows a user to register by providing required details such as first name, last name, username, password, and a verification token.
      The user needs to provide a password and confirm the password to ensure they match. If the registration details are valid, the user will be registered successfully.
      
      **Note:**
      - The `username` must be unique and cannot already exist in the system.
      - The `password` and `confirmPassword` fields must match.
      - A valid token is required for verification."
      operationId: registerUser
      requestBody:
        description: 'The credentials required to authenticate a user, with encryption value'
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - username
                - password
                - confirmPassword
                - token
              properties:
                firstName:
                  type: string
                  example: 'Jhon'
                lastName:
                  type: string
                  example: 'Doe'
                username:
                  type: string
                  example: 'jhondoe'
                password:
                  type: string
                  example: '0d6c46070c52b6d181710a7d2f1bcb9a'
                confirmPassword:
                  type: string
                  example: '0d6c46070c52b6d181710a7d2f1bcb9a'
                token:
                  type: string
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00400-VI':
                  summary: 'statusCode 00400-VI'
                  value:
                    statusCode: '00400'
                    message: '\"username\" is required'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00400-UAE':
                  summary: 'statusCode 00400-UAE'
                  value:
                    statusCode: '00400'
                    message: 'Email or Username already exist'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00400-PCI':
                  summary: 'statusCode 00400-PCI'
                  value:
                    statusCode: '00400'
                    message: 'Password and Confirm Password must be match'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00400-PSI':
                  summary: 'statusCode 00400-PSI'
                  value:
                    statusCode: '00400'
                    message: 'Previos step invalid'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-MMP':
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: 'Missing Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-IMP':
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: 'Invalid Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '422':
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '01422':
                  summary: 'statusCode 01422'
                  value:
                    statusCode: '01422'
                    message: Failed Decryption
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: To Many Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: Bad Implementation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: statusCode 00500
                  value:
                    statusCode: '00500'
                    message: Internal Server Error
                    data: {}
                    transactionid: 'AWB3217331854074390'
  /api/auth/register/send-otp:
    post:
      tags:
        - developers
      summary: API Public
      description: "This endpoint allows a user to request an OTP (One-Time Password) to be sent to their email address as part of the registration process.
      The user must provide a valid email address. If the email is not already registered, an OTP will be sent to that address. 
      The OTP will be used for verifying the user's identity in subsequent registration steps.

      **Note:**
      - The email provided must not already be registered in the system.
      - The user will need to provide the OTP received in the next step to complete the registration process."
      operationId: registerSendOtp
      requestBody:
        description: 'The credentials required to authenticate a user, with encryption value'
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: '0d6c46070c52b6d181710a7d2f1bcb9a'
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00400-VI':
                  summary: 'statusCode 00400-VI'
                  value:
                    statusCode: '00400'
                    message: '\"email\" is required'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00400-UAE':
                  summary: 'statusCode 00400-UAE'
                  value:
                    statusCode: '00400'
                    message: 'Email already exist'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-MMP':
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: 'Missing Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-IMP':
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: 'Invalid Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '422':
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '01422':
                  summary: 'statusCode 01422'
                  value:
                    statusCode: '01422'
                    message: 'Failed Decryption'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: 'To Many Request'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: 'Bad Implementation'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: statusCode 00500
                  value:
                    statusCode: '00500'
                    message: Internal Server Error
                    data: {}
                    transactionid: 'AWB3217331854074390'
  /api/auth/register/verify-otp:
    post:
      tags:
        - developers
      summary: API Public
      description: "This endpoint allows a user to verify the OTP (One-Time Password) sent to them during the registration process. 
      The user must provide the OTP received along with a token used to verify their identity. 
      If the OTP is valid, the verification status will be successful, and the user can proceed to the next step in the registration or login process.

      **Note:**
      - Ensure that the OTP entered is valid and has not expired.
      - The token provided must be valid and not expired in order to successfully verify the OTP."
      operationId: registerVerifyOtp
      requestBody:
        description: 'The credentials required to authenticate a user, with encryption value'
        content:
          application/json:
            schema:
              type: object
              required:
                - otp
                - token
              properties:
                otp:
                  type: string
                  example: '123456'
                token:
                  type: string
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00400-VI':
                  summary: 'statusCode 00400-VI'
                  value:
                    statusCode: '00400'
                    message: '\"otp\" is required'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00400-EO':
                  summary: 'statusCode 00400-EO'
                  value:
                    statusCode: '00400'
                    message: 'Expired OTP'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00400-IO':
                  summary: 'statusCode 00400-IO'
                  value:
                    statusCode: '00400'
                    message: 'Invalid Otp'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00400-PSI':
                  summary: 'statusCode 00400-PSI'
                  value:
                    statusCode: '00400'
                    message: 'Previos step invalid'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-MMP':
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: 'Missing Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-IMP':
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: 'Invalid Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '422':
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '01422':
                  summary: 'statusCode 01422'
                  value:
                    statusCode: '01422'
                    message: 'Failed Verify Token'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: To Many Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: 'Bad Implementation'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: 'statusCode 00500'
                  value:
                    statusCode: '00500'
                    message: 'Internal Server Error'
                    data: {}
                    transactionid: 'AWB3217331854074390'
  /api/auth/refresh-token:
    post:
      tags:
        - developers
      summary: API Public
      description: "This endpoint is used to refresh an expired or near-expiration access token by verifying the provided refresh token. Upon successful verification, a new access token will be generated and returned.

      **Note:** This API requires the `__refresh_token_wildbook_web__` cookie to be sent along with the request in order to successfully refresh the access token.

      The refresh token is used to verify the user's identity and to issue a new access token without requiring the user to log in again. This helps maintain a seamless user experience, especially in mobile and web applications.

      The new access token will be returned in the response and should be used for subsequent API requests. It's essential to replace the old access token with the new one."
      operationId: refreshToken
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
        - in: cookie
          name: __refresh_token_wildbook_web__
          required: true
          description: Refresh token for generating a new access token
          schema:
            type: string
            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data: {}
                    transactionid: 'AWB3217331854074390'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: |
                  Set-Cookie: __access_token_wildbook_web__=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly; Secure
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40000-MMP':
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: 'Missing Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-IMP':
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: 'Invalid Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00401':
                  summary: 'statusCode 00401'
                  value:
                    statusCode: '00401'
                    message: 'Unauthorized'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '422':
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '01422':
                  summary: 'statusCode 01422'
                  value:
                    statusCode: '01422'
                    message: 'Failed Verify Token'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: To Many Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: 'Bad Implementation'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: 'statusCode 00500'
                  value:
                    statusCode: '00500'
                    message: 'Internal Server Error'
                    data: {}
                    transactionid: 'AWB3217331854074390'
  /api/auth/logout:
    post:
      tags:
        - developers
      summary: API Public
      description: "This endpoint is used to log the user out of the system by invalidating the active session. 
      **Note:** This API requires both the `__refresh_token_wildbook_web__` and `__access_token_wildbook_web__` cookies to be sent with the request in order to successfully log out the user.
      
      Upon a successful logout, both the access token and refresh token will be invalidated, and the user will no longer be authenticated. It is recommended that the client clears the tokens from the browser or app after a successful logout.

      **Cookies**:  
      - `__refresh_token_wildbook_web__`: The refresh token used to generate new access tokens.
      - `__access_token_wildbook_web__`: The access token used to authenticate API requests."
      operationId: logout
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
        - in: cookie
          name: __refresh_token_wildbook_web__
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        - in: cookie
          name: __access_token_wildbook_web__
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data: {}
                    transactionid: 'AWB3217331854074390'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: |
                  Set-Cookie: __access_token_wildbook_web__=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; Path=/; HttpOnly; Secure
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40000-MMP':
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: 'Missing Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-IMP':
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: 'Invalid Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: To Many Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: 'Bad Implementation'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: 'statusCode 00500'
                  value:
                    statusCode: '00500'
                    message: 'Internal Server Error'
                    data: {}
                    transactionid: 'AWB3217331854074390'
  /api/auth/forgot-password:
    post:
      tags:
        - developers
      summary: API Public
      description: "This endpoint allows a user to initiate the password reset process by providing their login identifier (usually email). 
      If the email is valid and associated with a registered user, a password reset link or token will be sent to the user's email.
      This is typically used when a user has forgotten their password and needs to reset it.
      To initiate a password reset, the user must provide the **email** associated with their account."
      operationId: forgotPassword
      requestBody:
        description: 'The credentials required to authenticate a user, with encryption value'
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: '0d6c46070c52b6d181710a7d2f1bcb9a'
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00400-VI':
                  summary: 'statusCode 00400-VI'
                  value:
                    statusCode: '00400'
                    message: '\"email\" is required'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00404-UNF':
                  summary: 'statusCode 00404-UNF'
                  value:
                    statusCode: '00404'
                    message: 'User not found'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-MMP':
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: 'Missing Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-IMP':
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: 'Invalid Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '422':
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '01422':
                  summary: 'statusCode 01422'
                  value:
                    statusCode: '01422'
                    message: 'Failed Decryption'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: 'To Many Request'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: 'Bad Implementation'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: statusCode 00500
                  value:
                    statusCode: '00500'
                    message: Internal Server Error
                    data: {}
                    transactionid: 'AWB3217331854074390'
  /api/auth/reset-password:
    patch:
      tags:
        - developers
      summary: API Public
      description: '| This endpoint allows a user to reset their password. The user must provide the following:
      - **newPassword**: The new password the user wants to set.
      - **confirmPassword**: A confirmation of the new password.
      - **token**: A valid token to authorize the password reset request (usually provided via a reset link).
      
      If the provided token and password match the expected format, the password will be updated successfully. 
      An appropriate response will be returned based on the result.'
      operationId: resetPassword
      requestBody:
        description: "| The request body must include the user's new password, the password confirmation, 
        and the reset token. Passwords should be securely encrypted."
        content:
          application/json:
            schema:
              type: object
              required:
                - newPassword
                - confirmPassword
                - token
              properties:
                newPassword:
                  type: string
                  example: '0d6c46070c52b6d181710a7d2f1bcb9a'
                confirmPassword:
                  type: string
                  example: '0d6c46070c52b6d181710a7d2f1bcb9a'
                token:
                  type: string
                  example: '6c46070c52b6d181710a7d2f1bcb9aasdasdadasdasdaskjdhqioeh123j'
      parameters:
        - in: header
          name: Content-Type
          required: true
          description: Specifies the content type of the request body.
          schema:
            type: string
            example: application/json
        - in: header
          name: transactionid
          required: true
          description: Mandatory unique transaction identifier for tracking purposes
          schema:
            type: string
            example: 'AWB3217331854074390'
        - in: header
          name: channelid
          required: true
          description: Mandatory parameter to specify the source channel (mobile/web)
          schema:
            type: string
            example: mobile
        - in: header
          name: deviceid
          required: true
          description: Mandatory device identifier (UUID format)
          schema:
            type: string
            example: 550e8400-e29b-41d4-a716-446655440000
        - in: header
          name: platform
          required: true
          description: Mandatory platform parameter (WEB/ANDROID/IOS)
          schema:
            type: string
            example: WEB
        - in: header
          name: language
          required: true
          description: Mandatory language parameter (id/en)
          schema:
            type: string
            example: id
        - in: header
          name: wildbook-version
          required: false
          description: Mandatory if the channel id is "mobile"
          schema:
            type: string
            example: 1.0.0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00000':
                  summary: statusCode 00000
                  value:
                    statusCode: '00000'
                    message: success
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00400-VI':
                  summary: 'statusCode 00400-VI'
                  value:
                    statusCode: '00400'
                    message: '\"password\" is required'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '00404-UNF':
                  summary: 'statusCode 00404-UNF'
                  value:
                    statusCode: '00404'
                    message: 'User not found'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-MMP':
                  summary: 'statusCode 40000 : MMP'
                  value:
                    statusCode: '40000'
                    message: 'Missing Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
                '40000-IMP':
                  summary: 'statusCode 40000 : IMP'
                  value:
                    statusCode: '40000'
                    message: 'Invalid Mandatory Parameter'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '422':
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '01422':
                  summary: 'statusCode 01422'
                  value:
                    statusCode: '01422'
                    message: 'Failed Decryption'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '429':
          description: 'To Many Request'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '40429':
                  summary: 'statusCode 40429 : TE'
                  value:
                    statusCode: '40429'
                    message: 'To Many Request'
                    data: {}
                    transactionid: 'AWB3217331854074390'
        '500':
          description: 'Bad Implementation'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-dto'
              examples:
                '00500':
                  summary: statusCode 00500
                  value:
                    statusCode: '00500'
                    message: Internal Server Error
                    data: {}
                    transactionid: 'AWB3217331854074390'
components:
  schemas:
    response-dto:
      type: object
      properties:
        statusCode:
          type: string
        message:
          type: string
        data:
          type: object
        transactionid:
          type: string